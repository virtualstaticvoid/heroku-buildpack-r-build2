ARG HEROKU_STACK
FROM heroku/heroku:$HEROKU_STACK-build

ARG HEROKU_STACK
ARG R_VERSION
ARG CRAN_VERSION

# set default locale
ENV LANG C.UTF-8

# set default timezone
ENV TZ UTC

ARG DEBIAN_FRONTEND=noninteractive

# install base utilities
RUN apt-get update -q \
 && apt-get install -qy --no-install-recommends \
      apt-transport-https \
      autoconf \
      automake \
      build-essential \
      curl \
      fakeroot \
      gawk \
      git \
      gnupg2 \
      libcurl4-openssl-dev \
      libicu-dev \
      libopenblas-base \
      libpcre2-dev \
      libpq-dev \
      libssl-dev \
      libtool \
      lsb-release \
      m4 \
      ruby \
      tcl-dev \
      tk-dev \
      wget \
      xz-utils \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

# add R package apt sources
RUN ubuntu_codename=$(lsb_release -c | awk '{print $2}') \
 && keyid=E298A3A825C0D65DFD57CBB651716619E084DAB9 \
 && export GNUPGHOME="$(mktemp -d)" \
 && gpg --recv-keys --keyserver keyserver.ubuntu.com $keyid \
 && mkdir -p /etc/apt/keyrings \
 && gpg --export $keyid > /etc/apt/keyrings/cloud.r-project.org.gpg \
 && echo "deb [signed-by=/etc/apt/keyrings/cloud.r-project.org.gpg] https://cloud.r-project.org/bin/linux/ubuntu ${ubuntu_codename}-$CRAN_VERSION/" > /etc/apt/sources.list.d/r.list \
 && echo "deb-src [signed-by=/etc/apt/keyrings/cloud.r-project.org.gpg] https://cloud.r-project.org/bin/linux/ubuntu ${ubuntu_codename}-$CRAN_VERSION/" >> /etc/apt/sources.list.d/r.list

# figure out dependent packages of r-base-core and r-base-dev
COPY scripts/pkg_depends.rb .

RUN apt-get update -q \
 && PACKAGES=$(ruby pkg_depends.rb $R_VERSION) \
 && apt-get install -qy $PACKAGES \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN rm pkg_depends.rb

# add R and tcltk libraries to ldd search paths
COPY scripts/ldd.conf /etc/ld.so.conf.d/app-R-tcltk.conf

# rewrite symlinks for blas and lapack
#  i.e. don't use alternatives mechanism for these components
RUN cd /usr/lib/x86_64-linux-gnu/ \
  && ln -sf $(readlink /etc/alternatives/lapack.pc-x86_64-linux-gnu) lapack.pc \
  && ln -sf $(readlink /etc/alternatives/libblas.a-x86_64-linux-gnu) libblas.a \
  && ln -sf $(readlink /etc/alternatives/libblas.so.3-x86_64-linux-gnu) libblas.so.3 \
  && ln -sf $(readlink /etc/alternatives/libblas.so-x86_64-linux-gnu) libblas.so \
  && ln -sf $(readlink /etc/alternatives/liblapack.a-x86_64-linux-gnu) liblapack.a \
  && ln -sf $(readlink /etc/alternatives/liblapack.so.3-x86_64-linux-gnu) liblapack.so.3 \
  && ln -sf $(readlink /etc/alternatives/liblapack.so-x86_64-linux-gnu) liblapack.so \
  && ln -sf $(readlink /etc/alternatives/blas.pc-x86_64-linux-gnu) blas.pc \
  && ln -sf $(readlink /etc/alternatives/cblas.h-x86_64-linux-gnu) cblas.pc

# convert symlinks from absolute to relative
# since fakechroot ldd/ld doesn't reliably find libraries otherwise
RUN git clone -b v1.4.3 --single-branch --depth 1 --quiet https://github.com/brandt/symlinks.git \
 && ( cd symlinks && make ) \
 && ( cd /usr/lib/x86_64-linux-gnu/ && /symlinks/symlinks -rc . | grep changed ) \
 && rm -rf symlinks

#
# clear out dpkg overrides, to avoid the following error
#
#  dpkg: unrecoverable fatal error, aborting:
#   unknown system group '....' in statoverride file; the system group got removed
#  before the override, which is most probably a packaging bug, to recover you
#  can remove the override manually with dpkg-statoverride
#
RUN rm -f /var/lib/dpkg/statoverride \
 && touch /var/lib/dpkg/statoverride
